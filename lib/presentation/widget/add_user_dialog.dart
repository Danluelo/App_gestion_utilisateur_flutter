import 'package:flutter/material.dart';
import 'package:my_app/model/userModel.dart'; // âœ… ModÃ¨le User (id, name, ageâ€¦)
import 'package:my_app/repository/userRepo.dart' as UserApi; // âœ… API qui gÃ¨re les appels Firestore (ajout dâ€™utilisateur)

/// Widget qui affiche une boÃ®te de dialogue (popup)
/// permettant dâ€™ajouter un nouvel utilisateur
class AddUserDialog extends StatefulWidget {
  final Function(User) onUserAdded; // âœ… Callback qui sera exÃ©cutÃ© aprÃ¨s ajout

  const AddUserDialog({super.key, required this.onUserAdded});

  @override
  State<AddUserDialog> createState() => _AddUserDialogState();
}

class _AddUserDialogState extends State<AddUserDialog> {
  // âœ… ContrÃ´leurs de texte pour rÃ©cupÃ©rer les valeurs saisies
  final ctrName = TextEditingController();
  final ctrAge = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return AlertDialog(
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(16), // âœ… coins arrondis pour design moderne
      ),

      // âœ… Titre du popup
      title: Row(
        children: const [
          SizedBox(width: 10),
          Text(
            "Add Users",
            style: TextStyle(
              fontWeight: FontWeight.bold,
              color: Colors.green,
            ),
          ),
        ],
      ),

      // âœ… Contenu : formulaire avec deux champs (Nom & Ã‚ge)
      content: Column(
        mainAxisSize: MainAxisSize.min, // ajuste la taille au contenu
        children: [
          // Champ texte : Nom
          TextField(
            controller: ctrName,
            decoration: InputDecoration(
              labelText: "Nom",
              border: OutlineInputBorder(
                borderRadius: BorderRadius.circular(10),
              ),
            ),
          ),
          const SizedBox(height: 15),

          // Champ texte : Ã‚ge
          TextField(
            controller: ctrAge,
            keyboardType: TextInputType.number, // clavier numÃ©rique
            decoration: InputDecoration(
              labelText: "Ã‚ge",
              border: OutlineInputBorder(
                borderRadius: BorderRadius.circular(10),
              ),
            ),
          ),
        ],
      ),

      // âœ… Boutons en bas du popup
      actionsPadding: const EdgeInsets.symmetric(horizontal: 16, vertical: 10),
      actions: [
        // ðŸ”¹ Bouton Annuler (ferme la popup sans rien faire)
        OutlinedButton(
          style: OutlinedButton.styleFrom(
            shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),
          ),
          onPressed: () => Navigator.pop(context),
          child: const Text(
            "Annuler",
            style: TextStyle(
              color: Colors.black87,
              fontWeight: FontWeight.w500,
              fontSize: 16,
            ),
          ),
        ),

        // ðŸ”¹ Bouton Ajouter (valide et enregistre)
        ElevatedButton(
          style: ElevatedButton.styleFrom(
            backgroundColor: Colors.green,
            foregroundColor: Colors.white,
            shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),
          ),
          onPressed: () async {
            final name = ctrName.text.trim();   // âœ… supprime les espaces
            final ageText = ctrAge.text.trim(); // âœ… supprime les espaces

            // VÃ©rifie si les champs sont vides
            if (name.isEmpty || ageText.isEmpty) {
              // âœ… Affiche un message dâ€™erreur
              ScaffoldMessenger.of(context).showSnackBar(
                const SnackBar(
                  content: Text("Veuillez remplir tous les champs."),
                  backgroundColor: Colors.red,
                ),
              );
              return; // âœ… stoppe lâ€™ajout
            }

            // âœ… CrÃ©e un nouvel utilisateur avec les donnÃ©es saisies
            final newUser = User(
              id: "", // Firestore va gÃ©nÃ©rer un ID automatiquement
              name: name,
              age: int.tryParse(ageText) ?? 0, // convertit en int (0 si invalide)
            );

            // âœ… Envoie vers Firestore via lâ€™API
            await UserApi.addUser(newUser);

            // âœ… Appelle le callback pour mettre Ã  jour la liste cÃ´tÃ© parent
            widget.onUserAdded(newUser);

            // âœ… Ferme la popup
            Navigator.pop(context);
          },
          child: const Text(
            "Ajouter",
            style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
          ),
        ),
      ],
    );
  }
}
